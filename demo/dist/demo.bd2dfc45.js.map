{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./demo/src/components/VideoDemo.js","webpack:///./node_modules/nwb/polyfills.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/asap/browser-raw.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./src/pannellum/js/RequestAnimationFrame.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/object-assign/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./demo/src/images/video.mp4","webpack:///./src/pannellum/js/videojs-pannellum-plugin.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/promise/lib/es6-extensions.js","webpack:///./node_modules/react-dom/index.js","webpack:///./demo/src/images/milan.jpg","webpack:///./src/elements/Pannellum.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/scheduler/cjs/scheduler.production.min.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/has/src/index.js","webpack:///./demo/src/components/Header.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/promise/lib/rejection-tracking.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./demo/src/index.js","webpack:///./demo/src/components/ImageDemo.js","webpack:///./src/elements/PannellumVideo.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./src/pannellum/js/pannellum.js","webpack:///./src/index.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/video.js/node_modules/global/document.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./src/pannellum/js/libpannellum.js","webpack:///./demo/src/images/alma.jpg","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/promise/lib/core.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/scheduler/index.js","webpack:///./demo/src/images/jfk.mp4","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/video.js/node_modules/global/window.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/xhr/node_modules/global/window.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js"],"names":["inspectMp4","textifyMp4","parseType","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parse","avc1","data","view","DataView","buffer","byteOffset","byteLength","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","i","result","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","push","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","length","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","type","end","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","implementation","trim","componentName","props","_classCallCheck","this","_this","_possibleConstructorReturn","_Component","hanldeClick","path","console","log","setState","mediaVideo","myVideo","title","scene","hanldeClickCheck","myVideo2","state","ref","React","createRef","componentDidMount","current","render","_this2","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","className","onClick","video","pause","play","__WEBPACK_IMPORTED_MODULE_1__src__","loop","autoplay","pitch","yaw","hfov","minHfov","maxHfov","hotSpotDebug","mouseZoom","controls","Hotspot","handleClick","evt","args","handleClickArg","text","URL","data-language","Component","Promise","enable","window","assign","aa","n","r","x","b","arguments","c","d","encodeURIComponent","e","f","g","h","Error","l","k","replace","framesToPop","ba","da","ea","fa","ha","ia","onError","ja","apply","m","la","ma","na","indexOf","oa","extractEvents","eventTypes","pa","hasOwnProperty","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","va","wa","currentTarget","ka","xa","isArray","concat","ya","forEach","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","constructor","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","random","Fa","Ga","Ha","parentNode","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","document","Sa","toLowerCase","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","style","animation","transition","Xa","Ya","Za","$a","bb","cb","db","eb","textContent","fb","gb","y","nativeEvent","Interface","target","isDefaultPrevented","defaultPrevented","returnValue","ib","eventPool","pop","jb","destructor","hb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","keyCode","vb","detail","wb","zb","locale","which","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","url","week","Mb","nodeName","Nb","srcElement","correspondingUseElement","nodeType","Ob","setAttribute","Pb","Rb","_valueTracker","getOwnPropertyDescriptor","get","set","defineProperty","configurable","enumerable","getValue","setValue","stopTracking","Qb","Sb","checked","Tb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","Ub","Symbol","for","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","iterator","hc","ic","displayName","$$typeof","_status","_result","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","C","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","D","rc","sc","toUpperCase","tc","pc","isNaN","qc","test","oc","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","ownerDocument","activeElement","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","detachEvent","Kc","Lc","attachEvent","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","defaultView","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","child","sibling","gd","id","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","charCode","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","location","repeat","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","E","Cd","Dd","bind","addEventListener","Ed","Fd","Gd","Hd","Id","Jd","body","Kd","firstChild","Ld","node","nextSibling","Nd","HTMLIFrameElement","contentWindow","href","Od","contentEditable","Qd","focusedElem","selectionRange","Md","contains","compareDocumentPosition","documentElement","start","selectionStart","selectionEnd","min","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","children","Children","Zd","ae","options","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","ie","je","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","charAt","substring","pe","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","qe","re","is","se","blur","te","ue","ve","we","autoFocus","xe","__html","ye","setTimeout","ze","clearTimeout","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Set","Fe","Ge","F","G","He","H","I","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","J","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","K","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","isReactComponent","Xe","Ye","Ze","$e","af","bf","pendingChildren","cf","didError","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","L","defaultProps","jf","refs","kf","baseState","tf","isMounted","_reactInternalFiber","enqueueSetState","lf","nf","mf","payload","callback","of","pf","qf","enqueueReplaceState","rf","enqueueForceUpdate","sf","uf","shouldComponentUpdate","isPureReactComponent","vf","contextType","M","updater","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","context","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","zf","Af","_owner","_stringRef","Bf","Cf","Map","p","t","A","q","u","B","w","delete","R","next","done","Df","Ef","Ff","N","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","O","P","Yf","Q","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","queue","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","action","qg","last","lastRenderedState","eagerReducer","eagerState","rg","create","destroy","deps","sg","tg","ug","vg","wg","readContext","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","ReactCurrentOwner","S","Hg","Ig","Jg","Kg","compare","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","_ctor","then","default","hf","We","hydrate","hidden","_context","_calculateChangedBits","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","_currentValue","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","stack","kh","lh","mh","nh","oh","onclick","ph","WeakSet","qh","error","rh","sh","th","vh","componentWillUnmount","wh","xh","yh","insertBefore","_reactRootContainer","zh","wasMultiple","multiple","Ce","display","uh","hi","Xh","has","add","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","T","Lh","U","Mh","Nh","V","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","W","X","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","createTextNode","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","Y","mi","ni","oi","Z","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeout","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","findBox","startTime","getVideoTrackIds","toUnsigned","subresults","results","init","reduce","fragment","trafs","baseTimes","scale","Infinity","isFinite","videoTrackIds","hdlrs","tkhds","hasSymbols","toStr","origDefineProperty","supportsDescriptors","obj","_","arePropertyDescriptorsSupported","object","predicate","fn","writable","defineProperties","predicates","getOwnPropertySymbols","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","charCodeAt","audio","setUint32","audioobjecttype","samplingfrequencyindex","tracks","trackFragments","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","floor","durationPresent","sizePresent","flagsPresent","undefined","initSegment","fileType","movie","isFunction","parseHeaders","xtend","initParams","uri","params","createXHR","_createXHR","called","err","response","errorFunc","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","withCredentials","abort","code","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","position","workingBytes","availableBytes","skipBits","count","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","StreamTypes","handleRollover","probe","ts","aac","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","frame","pes","currentFrame","firstKeyFrame","shift","videoPacketContainsKeyFrame","warn","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","isLikelyAacData","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","global","rawAsap","task","requestFlush","capacity","flush","currentIndex","scan","newLength","toggle","observer","scope","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","handleTimer","intervalHandle","setInterval","clearInterval","observe","characterData","TransportPacketStream","TransportParseStream","ElementaryStream","Stream","CaptionStream","TimestampRolloverStream","m2tsStreamTypes","bytesInBuffer","everything","trigger","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","METADATA_STREAM_TYPE","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream","forceFlush","packetFlushable","packetData","event","ptsDtsFlags","packetLength","dataAlignmentIndicator","timelineStartInfo","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","Cea608Stream","MetadataStream","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_tsml__","__WEBPACK_IMPORTED_MODULE_2_tsml___default","__WEBPACK_IMPORTED_MODULE_3_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_3_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_4_keycode__","__WEBPACK_IMPORTED_MODULE_4_keycode___default","__WEBPACK_IMPORTED_MODULE_5_xhr__","__WEBPACK_IMPORTED_MODULE_5_xhr___default","__WEBPACK_IMPORTED_MODULE_6_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_6_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_7_url_toolkit__","__WEBPACK_IMPORTED_MODULE_7_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_8_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_9_mpd_parser__","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_tools_mp4_inspector__","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_tools_mp4_inspector___default","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_12_mux_js_lib_mp4__","__WEBPACK_IMPORTED_MODULE_13_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_13_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_14_aes_decrypter__","_inheritsLoose","subClass","superClass","__proto__","_setPrototypeOf","o","setPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","instance","Function","_assertThisInitialized","ReferenceError","_taggedTemplateLiteralLoose","strings","raw","history","LogByTypeFactory","level","lvl","levels","lvlRegExp","RegExp","unshift","createLogger","logByType","_len","_key","subname","all","off","debug","DEFAULT","fname","historyItem","clear","disable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","isObject","each","sources","isPlain","computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","isEl","isInFrame","parent","createQuerier","selector","querySelector","ctx","createEl","properties","attributes","content","getOwnPropertyNames","propName","val","attrName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","addClass","classToAdd","removeClass","classToRemove","remove","toggleClass","classToToggle","setAttributes","attrValue","getAttributes","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","onselectstart","unblockTextSelection","getBoundingClientRect","rect","parseFloat","findPosition","docEl","clientLeft","pageXOffset","clientTop","pageYOffset","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","max","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","performance","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","old","stopImmediatePropagation","isImmediatePropagationStopped","doc","_supportsPassive","opts","passiveEvents","on","guid","hash","handlersCopy","passive","removeType","splice","elemData","targetData","one","func","any","videojs","_windowLoaded","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","mergeOptions","ready","player_","parentComponent_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","_proto","dispose","localize","tokens","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","component","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","touchEnd","timeoutId","disposeFn","interval","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","_i","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","acc","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","empty","closeButton","content_","activeEl","playerEl","isEventKey","focusIndex","focusableEls","focusableEls_","allChildren","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","showing","Track","trackProps","_loop","parseUrl","div","addToBody","host","protocol","details","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","loadTrack","crossOrigin","responseBody","loaded_","tech_","loadHandler","errorHandler","TextTrack","_Track","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","reject","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","s","gm","formatTime","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","unloadListener_","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this8","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","callbacks","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","TypeError","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck","Constructor","createClass","protoProps","staticProps","inherits","possibleConstructorReturn","slicedToArray","arr","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","playlist","playlists","segments","endList","mediaSequence","mergedPlaylist","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","addParser","mapper","addTagMapper","manifest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","delay","mediaChange","started","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","segmentXhrHeaders","byterange","byterangeEnd","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","pipe","destination","flushSource","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalUnitType","currentGop","gops","nalCount","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","reference","direction","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","chunk","frameStart","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","244","44","83","86","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parse$$1","mp4Inspector$$1","_byte","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","sidxMapping","sidxKey","sidxRequestFinished_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","filterChangedSidxMappings","updatedMaster","mediaUri","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decrypted","keyBytes","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","timeline","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","RESOLUTION","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_pkcs7__","prefixWithSilence","audioTsToVideoTs","ONE_SECOND_IN_TS","videoTsToAudioTs","trimAdtsFramesByEarliestDts","generateSampleTable","concatenateFrameData","keysShim","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","$isNaN","propIsEnumerable","test1","test2","test3","letter","shouldUseNative","symbols","toObject","eval","scrollSetting","","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","__WEBPACK_IMPORTED_MODULE_0_video_js__","pannellum","vid","pnlmContainer","dynamic","showZoomCtrl","showFullscreenCtrl","autoLoad","panorama","visibility","pnlmViewer","viewer","setUpdate","AdtsStream","AacStream","aacUtils","modulo","remain","reviver","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","concatenateNalData","TRUE","valuePromise","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","_44","_83","_18","ex","remaining","res","race","onRejected","checkDCE","Pannellum","_PureComponent","renderImage","hotspots","hotspotArray","hotspot","substr","cssClass","createTooltipFunc","tooltip","hotspotTooltip","createTooltipArgs","tooltipArg","clickHandlerFunc","handleClickHotspot","clickHandlerArgs","jsonConfig","image","haov","vaov","vOffset","minPitch","maxPitch","minYaw","maxYaw","autoRotate","compass","preview","previewTitle","previewAuthor","author","orientationOnByDefault","keyboardZoom","draggable","disableKeyboardCtrl","showControls","hotspotDebug","hotSpots","onRender","cubeMap","onLoad","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","hotSpotDiv","hDiv","outDiv","inDiv","getViewer","forceRender","prevProps","prevState","snapshot","setYawBounds","setPitchBounds","setHfovBounds","setYaw","setPitch","setHfov","_props","divStyle","__WEBPACK_IMPORTED_MODULE_1_react___default","imageNode","PureComponent","propTypes","oneOfType","arrayOf","isCallable","thisArg","len","forEachString","forEachObject","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propFullName","secret","getShim","isRequired","ReactPropTypes","symbol","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","alert","confirm","prompt","define","getPolyfill","boundTrim","unpad","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","__WEBPACK_IMPORTED_MODULE_0_react__","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","DEFAULT_WHITELIST","RangeError","_47","_71","matchWhitelist","cls","displayId","rejections","onUnhandled","allRejections","whitelist","logged","logError","_56","onHandled","_75","origKeys","originalKeys","GetIntrinsic","$TypeError","$SyntaxError","Property Descriptor","ES","Desc","Type","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","recordType","argumentName","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","Demo","__WEBPACK_IMPORTED_MODULE_3__components_Header__","__WEBPACK_IMPORTED_MODULE_4__components_ImageDemo__","__WEBPACK_IMPORTED_MODULE_5__components_VideoDemo__","ImageDemo","hanldeClickImage","mediaPhoto","myImage2","myImage","yaww","updateText","flexDirection","PannellumVideo","renderVideo","videoNode","cuurentHS","getConfig","hs","removeHotSpot","addHotSpot","data-vjs-player","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","alt","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","leftWhitespace","rightWhitespace","ToString","CheckObjectCoercible","that","boundLength","boundArgs","Empty","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","$Object","$String","assertRecord","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","IsPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","setter","polyfill","Viewer","initialConfig","renderer","panoImage","prevTime","autoRotateStart","origHfov","origPitch","isUserInteracting","latestInteraction","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","fullscreenActive","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","hotspotsCreated","defaultConfig","roll","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","doubleClickZoom","avoidShowingBackground","animationTimingFunction","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","uiContainer","renderContainer","dragFix","aboutMsg","aboutMessage","mousePosition","t1","t2","infoDisplay","hotSpotDebugIndicator","boxp","lbox","lbar","lbarFill","msg","errorMsg","processOptions","zoomIn","animateInit","zoomOut","toggleFullscreen","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","alpha","beta","gamma","Image","multiRes","basePath","anError","itemsToLoad","onImageLoad","outerHTML","absoluteURL","sanitizeURL","onloadend","reader","FileReader","flagIndex","ignoreGPanoXMP","xmpData","getTag","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","horizonPitch","horizonRoll","readAsBinaryString","readAsText","lengthComputable","numerator","denominator","libpannellum","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","PI","renderInitCallback","maxWidth","renderInit","fireEvent","bounds","coords","mouseEventToCoords","stopAnimation","lookAt","canvas","getCanvas","canvasWidth","clientWidth","canvasHeight","clientHeight","focal","tan","sin","cos","root","atan","atan2","vfov","pos0","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","pointerIDs","pointerCoordinates","defined","keynumber","keycode","changeKey","keyChanged","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","renderHotSpots","transform","webkitTransform","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","isLoading","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","angle","orientationListener","toEulerAngles","sceneFadeDuration","fadeImg","createHotSpot","createHotSpots","escapeHTML","span","paddingTop","sceneId","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","scrollWidth","marginLeft","marginTop","scrollHeight","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","yawSin","hfovTan","coord","rollSin","rollCos","MozTransform","photoSphereExcludes","scenes","isPreview","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","resize","constrainHfov","cubeResolution","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","returnImage","destroyHotSpots","asin","isLoaded","getPitch","animated","getPitchBounds","getYaw","getYawBounds","getHfov","getHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","setPose","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","getScene","addScene","removeScene","getContainer","hotSpotId","isOrientationSupported","isOrientationActive","__WEBPACK_IMPORTED_MODULE_0__elements_Pannellum__","__WEBPACK_IMPORTED_MODULE_1__elements_PannellumVideo__","searchInput","hasKeyCode","foundNamedKey","aliases","nameOrCode","backspace","tab","enter","ctrl","pause/break","caps lock","esc","space","page up","page down","home","down","insert","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","break","caps","spc","spacebar","pgup","pgdn","ins","del","cmd","alias","doccy","topLevel","minDoc","CoalesceStream","collectDtsInfo","calculateTrackBaseMediaDecodeTime","clearDtsInfo","Renderer","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","imageType","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","multiresNodeSort","multiresNodeRenderSort","MultiresNode","vertices","side","testMultiresNode","rotPersp","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","theta","acos","inCurrent","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","maxLevel","numTiles","invTileResolution","doubleTileSize","tileResolution","lastTileSize","ntmp","f1","f2","f3","i1","i2","i3","fullpath","rotateMatrix","transposeMatrix4","_image","_imageType","_dynamic","voffset","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundSquare","ImageData","getContext","getError","handleWebGLError1286","appVersion","fallbackPath","sides","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","encodeURI","extension","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","clearColor","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","getUniformLocation","uniform1f","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","perspUniform","cubeUniform","getExtension","loseContext","pixelRatio","devicePixelRatio","orig_pitch","orig_yaw","roll_adj","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","uniformMatrix4fv","removed","pendingTextureRequests","textureLoad","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","toDataURL","transforms","faces","face","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","tex","til","releaseTextureImageLoader","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","fragEquiCubeBase","imagetype","fetch","support","searchParams","iterable","formData","arrayBuffer","viewClasses","isDataView","isArrayBufferView","Headers","normalizeName","normalizeValue","oldValue","iteratorFor","Request","_bodyInit","Body","Response","statusText","redirectStatuses","redirect","rawHeaders","credentials","consumed","bodyUsed","fileReaderReady","readBlobAsArrayBuffer","readAsArrayBuffer","bufferClone","buf","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","chars","readArrayBufferAsText","upcased","referrer","bodyInit","ok","clean","asap","LAST_ERROR","IS_ERROR","_38","doResolve","handle","deferred","onFulfilled","tryCallOne","handleResolved","newValue","getThen","finale","Handler","tryCallTwo","safeThen","_extends","LineStream","nextNewline","parseAttributes","ParseStream","customParsers","tagMappers","mappedLine","newLine","tagType","playlistType","URI","BYTERANGE","_attributes$BYTERANGE","IV","PRECISE","expression","customType","dataParser","lineStream","currentMap","uris","currentUri","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","timeOffset","cue-out","cue-out-cont","cue-in","cueIn","comment","callee","ThrowTypeError","getProto","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","$ %Promise_resolve%","$ %Proxy%","$ %RangeError%","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","$ %WeakMapPrototype%","$ %WeakSet%","$ %WeakSetPrototype%","allowMissing","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","parseUTCTiming","merge","objects","flatten","lists","urlToolkit","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","startRange","endRange","segmentRange","static","_attributes$timescale","sourceDuration","NOW","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","periodDuration","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","sidxByteRange","sidxEnd","mediaReferences","mergeDiscontiguousPlaylists","_acc$name$segments","addSegmentInfoFromSidx","sidxMatch","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","mainPlaylist","formattedPlaylists","roleLabel","_attributes","formatAudioPlaylist","organizeAudioPlaylists","subs","_attributes2","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","segmentTime","nextS","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","ca","forceUpdate","__self","__source","keyPrefix",":","toArray","only","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","memo","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","isPrimitive","ES5internalSlots","actualHint"],"mappings":"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","file":"demo.bd2dfc45.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/polyfill.js\n// module id = +86n\n// module chunks = 0","import React, { Component } from 'react';\nimport { Pannellum, PannellumVideo }  from '../../../src';\nimport myVideo from \"../images/jfk.mp4\";\nimport myVideo2 from \"../images/video.mp4\";\n\nexport default class componentName extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      mediaVideo : myVideo2,\n      scene: 1\n    };\n    this.ref = React.createRef();\n  }\n    \n  componentDidMount (){\n    console.log(this.ref.current);\n  }\n    \n  hanldeClick = (path)=>{\n    console.log(path); \n    this.setState({\n      mediaVideo : myVideo,\n      title: \"ooops\", \n      scene: 2\n    });\n  };\n\n  hanldeClickCheck = (path)=>{\n    console.log(path);\n    this.setState({\n      mediaVideo : myVideo2,\n      title: \"oo\",\n      scene: 1\n    });\n  };\n\n  \n  render() {\n    return (\n      <div className=\"video_main\">\n        <h2 className=\"section_title\">Video Component</h2>\n        <button\n          onClick={()=> {\n            this.ref.current.video.pause();\n          }}\n        >stop</button>\n        <button\n          onClick={()=> {\n            this.ref.current.video.play();\n          }}\n        >play</button>\n        <div className=\"pannellum_div\" >\n          {this.state.scene === 1 \n            ?\n            ( \n              <PannellumVideo\n                ref={this.ref}\n                video={this.state.mediaVideo}\n                loop\n                autoplay\n                width=\"800px\"\n                height=\"400px\"\n                pitch={10}\n                yaw={180}\n                hfov={120}\n                minHfov={50}\n                maxHfov={150}\n                hotSpotDebug\n                mouseZoom={false}\n                controls\n              >\n                <Pannellum.Hotspot \n                  type=\"custom\"\n                  pitch={31}\n                  yaw={150}\n                  handleClick={(evt , args) => this.hanldeClick(args.name)}\n                  handleClickArg={{ name : \"video2\" }}\n                />\n\n                <Pannellum.Hotspot\n                  type=\"info\"\n                  pitch={31}\n                  yaw={-57}\n                  text=\"Info dfsdfs\"\n                  URL=\"https://github.com/farminf\"\n                />\n\n              </PannellumVideo>\n            )\n            :\n            (\n              <PannellumVideo\n                video={this.state.mediaVideo}\n                loop\n                autoplay\n                width=\"600px\"\n                height=\"400px\"\n                pitch={10}\n                yaw={180}\n                hfov={110}\n                minHfov={90}\n                maxHfov={120}\n                hotSpotDebug\n                mouseZoom={false}\n              >\n                <Pannellum.Hotspot \n                  type=\"custom\"\n                  pitch={10}\n                  yaw={120}\n                  handleClick={(evt , args) => this.hanldeClickCheck(args.name)}\n                  handleClickArg={{ name : \"video1\" }}\n                />\n                <Pannellum.Hotspot\n                  type=\"info\"\n                  pitch={40}\n                  yaw={160}\n                  text=\"Info Hotspot Text 4\"\n                  URL=\"https://github.com/farminf\"\n                />\n              </PannellumVideo>\n            )}\n          <div className=\"codebox\">\n            <pre>\n              <code data-language=\"xml\">\n                {`\n  <PannellumVideo\n      video={this.state.mediaVideo}\n      loop\n      autoplay\n      width=\"800px\"\n      height=\"400px\"\n      pitch={10}\n      yaw={180}\n      hfov={120}\n      minHfov={50}\n      maxHfov={150}\n      hotSpotDebug\n      mouseZoom={false}\n  >\n      <Pannellum.Hotspot \n      type=\"custom\"\n      pitch={31}\n      yaw={150}\n      handleClick={(evt , args) => this.hanldeClick(args.name)}\n      handleClickArg={{ name : \"video2\" }}\n      />\n\n      <Pannellum.Hotspot\n      type=\"info\"\n      pitch={31}\n      yaw={-57}\n      text=\"Info dfsdfs\"\n      URL=\"https://github.com/farminf\"\n      />\n\n  </PannellumVideo>\n              `}</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/VideoDemo.js","// Ensure polyfill compatibility between create-react-app and zero-config nwb apps.\n// This is from https://github.com/facebookincubator/create-react-app/blob/master/config/polyfills.js\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behaviour.\n  require('promise/lib/rejection-tracking').enable()\n  window.Promise = require('promise/lib/es6-extensions.js')\n}\n\n// fetch() polyfill for making API calls\nrequire('whatwg-fetch')\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nwb/polyfills.js\n// module id = +prg\n// module chunks = 0","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = /OLF\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/define-properties/index.js\n// module id = /ymf\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 020U\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 2BoW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 3Cgm\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 4cG2\n// module chunks = 0","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/RequestAnimationFrame.js","/**\n * @license\n * Video.js 7.6.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.0\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n\n    event.stopPropagation();\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {String} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector$$1 = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector$$1.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector$$1.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector$$1.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        if (updatedMaster) {\n          var sidxKey = generateSidxKey(_this8.media().sidx); // the sidx was updated, so the previous mapping was removed\n\n          if (!_this8.sidxMapping_[sidxKey]) {\n            var playlist = _this8.media();\n\n            _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n              handleManifestRedirects: _this8.handleManifestRedirects\n            }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n              if (!newMaster || !sidx) {\n                throw new Error('failed to request sidx on minimumUpdatePeriod');\n              } // update loader's sidxMapping with parsed sidx box\n\n\n              _this8.sidxMapping_[sidxKey].sidx = sidx;\n              _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                _this8.trigger('minimumUpdatePeriod');\n              }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n              _this8.refreshMedia_(_this8.media().uri);\n\n              return;\n            }));\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 63pp\n// module chunks = 0","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = 6gfP\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/audio-frame-utils.js\n// module id = 7DRH\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 7GJ1\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 7JOd\n// module chunks = 0","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/implementation.js\n// module id = 7ciz\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isFinite.js\n// module id = 9+gG\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = BEQ0\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","module.exports = __webpack_public_path__ + \"video.76aa451a.mp4\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/video.mp4\n// module id = Eiv8\n// module chunks = 0","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.registerPlugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    \n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/videojs-pannellum-plugin.js","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = GJFR\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = GfXe\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = GiK3\n// module chunks = 0","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/mod.js\n// module id = H1lJ\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = KSGD\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = MjOi\n// module chunks = 0","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isNaN.js\n// module id = No8i\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = Nq5S\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = O27J\n// module chunks = 0","module.exports = __webpack_public_path__ + \"milan.df0cb5c8.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/milan.jpg\n// module id = O67U\n// module chunks = 0","import propTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\n\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\n\nclass Pannellum extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Math.random()\n        .toString(36)\n        .substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    image: propTypes.string,\n    haov: propTypes.number,\n    vaov: propTypes.number,\n    vOffset: propTypes.number,\n    yaw: propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    autoRotate: propTypes.number,\n    compass: propTypes.bool,\n    preview: propTypes.string,\n    previewTitle: propTypes.string,\n    previewAuthor: propTypes.string,\n    title: propTypes.string,\n    author: propTypes.string,\n    autoLoad: propTypes.bool,\n    orientationOnByDefault: propTypes.bool,\n    showZoomCtrl: propTypes.bool,\n    keyboardZoom: propTypes.bool,\n    mouseZoom: propTypes.bool,\n    draggable: propTypes.bool,\n    disableKeyboardCtrl: propTypes.bool,\n    showFullscreenCtrl: propTypes.bool,\n    showControls: propTypes.bool,\n    onLoad: propTypes.func,\n    onScenechange: propTypes.func,\n    onScenechangefadedone: propTypes.func,\n    onError: propTypes.func,\n    onErrorcleared: propTypes.func,\n    onMousedown: propTypes.func,\n    onMouseup: propTypes.func,\n    onTouchstart: propTypes.func,\n    onTouchend: propTypes.func,\n    hotspotDebug: propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick: propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n    onRender: propTypes.func,\n    cubeMap: propTypes.arrayOf(propTypes.string)\n  }\n\n  static defaultProps = {\n    children: [],\n    width: '100%',\n    height: '400px',\n    image: '',\n    haov: 360,\n    vaov: 180,\n    vOffset: 0,\n    yaw: 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    autoRotate: 0,\n    compass: false,\n    preview: '',\n    previewTitle: '',\n    previewAuthor: '',\n    title: '',\n    author: '',\n    autoLoad: false,\n    orientationOnByDefault: false,\n    showZoomCtrl: true,\n    keyboardZoom: true,\n    mouseZoom: true,\n    draggable: true,\n    disableKeyboardCtrl: false,\n    showFullscreenCtrl: true,\n    showControls: true,\n    onLoad: () => {},\n    onScenechange: () => {},\n    onScenechangefadedone: () => {},\n    onError: () => {},\n    onErrorcleared: () => {},\n    onMousedown: () => {},\n    onMouseup: () => {},\n    onTouchstart: () => {},\n    onTouchend: () => {},\n    hotspotDebug: false,\n    onRender: null,\n    cubeMap: []\n  }\n\n  renderImage = state => {\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one\n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)) {\n      hotspots.map(hotspot => {\n        switch (hotspot.props.type) {\n          case 'info':\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              type: hotspot.props.type,\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              text: hotspot.props.text ? hotspot.props.text : '',\n              URL: hotspot.props.URL ? hotspot.props.URL : ''\n            });\n          case 'custom':\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              cssClass: hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              createTooltipFunc: hotspot.props.tooltip\n                ? hotspot.props.tooltip\n                : this.hotspotTooltip,\n              createTooltipArgs: hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              clickHandlerFunc: hotspot.props.handleClick\n                ? hotspot.props.handleClick\n                : this.handleClickHotspot,\n              clickHandlerArgs: hotspot.props.handleClickArg\n                ? hotspot.props.handleClickArg\n                : { name: 'test' }\n            });\n          default:\n            return [];\n        }\n      });\n    }\n\n    let jsonConfig = {\n      type: 'equirectangular',\n      panorama: this.props.image,\n      haov: this.props.haov,\n      vaov: this.props.vaov,\n      vOffset: this.props.vOffset,\n      yaw: this.props.yaw,\n      pitch: this.props.pitch,\n      hfov: this.props.hfov,\n      minHfov: this.props.minHfov,\n      maxHfov: this.props.maxHfov,\n      minPitch: this.props.minPitch,\n      maxPitch: this.props.maxPitch,\n      minYaw: this.props.minYaw,\n      maxYaw: this.props.maxYaw,\n      autoRotate: this.props.autoRotate,\n      compass: this.props.compass,\n      preview: this.props.preview,\n      previewTitle: this.props.previewTitle,\n      previewAuthor: this.props.previewAuthor,\n      author: this.props.author,\n      title: this.props.title,\n      autoLoad: this.props.autoLoad,\n      orientationOnByDefault: this.props.orientationOnByDefault,\n      showZoomCtrl: this.props.showZoomCtrl,\n      keyboardZoom: this.props.keyboardZoom,\n      mouseZoom: this.props.mouseZoom,\n      draggable: this.props.draggable,\n      disableKeyboardCtrl: this.props.disableKeyboardCtrl,\n      showFullscreenCtrl: this.props.showFullscreenCtrl,\n      showControls: this.props.showControls,\n      hotSpotDebug: this.props.hotspotDebug,\n      hotSpots: hotspotArray,\n      onRender: this.props.onRender,\n      cubeMap: this.props.cubeMap\n    };\n\n    Object.keys(jsonConfig).forEach(\n      key => jsonConfig[key] === '' && delete jsonConfig[key]\n    );\n    // this.setState({ jsonConfig });\n\n    if (state === 'update') {\n      this.panorama.destroy();\n    }\n    this.panorama = pannellum.viewer(\n      this.props.id ? this.props.id : this.state.id,\n      jsonConfig\n    );\n\n    this.panorama.on('load', this.props.onLoad);\n    this.panorama.on('scenechange', this.props.onScenechange);\n    this.panorama.on('scenechangefadedone', this.props.onScenechangefadedone);\n    this.panorama.on('error', this.props.onError);\n    this.panorama.on('errorcleared', this.props.onErrorcleared);\n    this.panorama.on('mousedown', this.props.onMousedown);\n    this.panorama.on('mouseup', this.props.onMouseup);\n    this.panorama.on('touchstart', this.props.onTouchstart);\n    this.panorama.on('touchend', this.props.onTouchend);\n  }\n\n  componentDidMount = () => {\n    this.renderImage('mount');\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.image !== this.props.image ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.compass !== this.props.compass ||\n      prevProps.title !== this.props.title ||\n      prevProps.author !== this.props.author ||\n      prevProps.preview !== this.props.preview ||\n      prevProps.previewTitle !== this.props.previewTitle ||\n      prevProps.previewAuthor !== this.props.previewAuthor ||\n      prevProps.showZoomCtrl !== this.props.showZoomCtrl ||\n      prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl ||\n      prevProps.showControls !== this.props.showControls ||\n      prevProps.children.length !== this.props.children.length\n    ) {\n      this.renderImage('update');\n    }\n    if (\n      prevProps.maxYaw !== this.props.maxYaw ||\n      prevProps.minYaw !== this.props.minYaw ||\n      prevProps.maxPitch !== this.props.maxPitch ||\n      prevProps.minPitch !== this.props.minPitch ||\n      prevProps.maxHfov !== this.props.maxHfov ||\n      prevProps.minHfov !== this.props.minHfov\n    ) {\n      this.panorama.setYawBounds([this.props.minYaw, this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch, this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov, this.props.maxHfov]);\n    }\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  }\n\n  handleClickHotspot = (e, args) => {\n    console.log('hotspot clicked', args.name);\n  }\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute('id', 'textInfo');\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  getViewer = () => {\n    return this.panorama;\n  }\n\n  forceRender = () => {\n    this.renderImage('update');\n  }\n\n  render() {\n    let { width, height } = this.props;\n    let divStyle = {\n      width: width,\n      height: height\n    };\n    return (\n      <div\n        id={this.props.id ? this.props.id : this.state.id}\n        style={divStyle}\n        ref={node => (this.imageNode = node)}\n      />\n    );\n  }\n}\nPannellum.Hotspot = () => {};\nPannellum.Hotspot = () => {};\nexport default Pannellum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/Pannellum.js","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/index.js\n// module id = PiFy\n// module chunks = 0","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = Q4WQ\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/utils.js\n// module id = SkH0\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/index.js\n// module id = TaKV\n// module chunks = 0","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = UR7O\n// module chunks = 0","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scheduler/cjs/scheduler.production.min.js\n// module id = WifJ\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = X4yv\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has/src/index.js\n// module id = XfW5\n// module chunks = 0","import React from 'react';\n\nexport default () => {\n  return (\n    <header className=\"header\">\n      <div>\n        <a \n          href=\"/\"\n          className=\"main-header__brand\"\n        >\n            Pannellum React Component\n        </a>\n      </div>\n    </header>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/Header.js","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = bJHr\n// module chunks = 0","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/index.js\n// module id = bidq\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/assertRecord.js\n// module id = bvnS\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport \"./index.css\";\nimport Header  from \"./components/Header\";\nimport ImageDemo from \"./components/ImageDemo\";\nimport VideoDemo from \"./components/VideoDemo\";\n\n\n\n\nclass Demo extends Component {\n  \n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <ImageDemo />\n        <VideoDemo />\n      </div>\n    );\n  }\n\n}\n\n\nrender(<Demo />, document.querySelector('#demo'));\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/index.js","import React, { Component } from \"react\";\nimport { Pannellum } from \"../../../src\";\nimport myImage from \"../images/alma.jpg\";\nimport myImage2 from \"../images/milan.jpg\";\n\nexport default class ImageDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaPhoto: myImage,\n      yaww: 180,\n      test: false,\n      updateText: \"initial\",\n      author: \"author\"\n    };\n    this.ref = React.createRef();\n  }\n\n  hanldeClickImage = (evt, args) => {\n    console.log(args.name);\n    this.setState({\n      mediaPhoto: myImage2\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      mediaPhoto: myImage2,\n      test: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"image_main\">\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <button\n            onClick={() => this.setState(prevState => ({ author: \"change\" }))}\n          >\n            {\" \"}\n            change author{\" \"}\n          </button>\n          <button\n            onClick={() =>\n              this.setState(prevState => ({ yaww: prevState.yaww + 10 }))\n            }\n          >\n            {\" \"}\n            change yaw{\" \"}\n          </button>\n          <button onClick={() => this.setState({ updateText: \"after update\" })}>\n            {\" \"}\n            Should not update{\" \"}\n          </button>\n          <h3>{this.state.updateText}</h3>\n          <button\n            onClick={() => {\n              this.setState({ test: true, yaww: 100, mediaPhoto: myImage });\n            }}\n          >\n            {\" \"}\n            enable{\" \"}\n          </button>\n          <div>\n            {this.state.test && (\n              <button onClick={this.handleClick}> disable </button>\n            )}\n          </div>\n        </div>\n        <h2 className=\"section_title\">Image Component</h2>\n        <div className=\"pannellum_div\">\n          <Pannellum\n            ref={this.ref}\n            width=\"800px\"\n            height=\"400px\"\n            image={this.state.mediaPhoto}\n            pitch={10}\n            yaw={this.state.yaww}\n            hfov={120}\n            autoLoad\n            author={this.state.author}\n            title=\"\"\n          >\n            <Pannellum.Hotspot\n              type=\"info\"\n              pitch={11}\n              yaw={-167}\n              text=\"Info Hotspot Text 3\"\n              URL=\"https://github.com/farminf\"\n            />\n\n            <Pannellum.Hotspot\n              type=\"custom\"\n              pitch={31}\n              yaw={150}\n              handleClick={(evt, args) => this.hanldeClickImage(evt, args)}\n              handleClickArg={{ name: \"test\" }}\n            />\n          </Pannellum>\n\n          <div className=\"codebox\">\n            <pre>\n              <code data-language=\"xml\">\n                {`\n    <Pannellum\n        width=\"800px\"\n        height=\"400px\"\n        image={this.state.mediaPhoto}\n        pitch={10}\n        yaw={180}\n        hfov={500}\n        autoLoad\n        author=\"\"\n        title=\"\"\n        orientationOnByDefault={false}\n        draggable\n        keyboardZoom\n        mouseZoom\n        preview=\"\"      \n        previewAuthor=\"\"\n        previewTitle=\"\"\n        showControls\n        showFullscreenCtrl\n        showZoomCtrl\n        onLoad={()=>{console.log(\"panorama loaded\");}}\n        onScenechange={(id)=>{console.log(\"Scene has change on \" + id);}}\n        onScenechangefadedone={()=>{console.log(\"panorama loaded\");}}\n        onError={(err)=>{console.log(\"Error\" , err);}}\n        onErrorcleared={()=>{console.log(\"Error Cleared\");}}\n        onMousedown={(evt)=>{console.log(\"Mouse Down\" , evt);}}\n        onMouseup={(evt)=>{console.log(\"Mouse Up\", evt);}}\n        onTouchstart={(evt)=>{console.log(\"Touch Start\", evt);}}\n        onTouchend={(evt)=>{console.log(\"Touch End\", evt);}}\n        hotspotDebug={false}\n    >\n        <Pannellum.Hotspot \n        type=\"info\"\n        pitch={11}\n        yaw={-167}\n        text=\"Info Hotspot Text 3\"\n        URL=\"https://github.com/farminf\"\n        />\n\n        <Pannellum.Hotspot \n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , args) => this.hanldeClickImage(evt , args)}\n        handleClickArg={{ \"name\":\"test\" }}\n        />\n\n    </Pannellum>\n                `}\n              </code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/ImageDemo.js","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\n\nclass PannellumVideo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    video: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    hotspotDebug: propTypes.bool,\n    autoRotate: propTypes.number,\n    mouseZoom: propTypes.bool,\n    loop:propTypes.bool,\n    autoplay:propTypes.bool,\n    controls:propTypes.bool,\n    muted:propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    video:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    hotspotDebug: false,\n    autoRotate: 0,\n    mouseZoom: true,\n    loop:false,\n    autoplay:true,\n    controls:false,\n    muted: true\n  }\n\n  renderVideo = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    if (state === \"update\"){\n      \n      this.video = videojs(this.videoNode);\n      let cuurentHS = [...this.video.pnlmViewer.getConfig().hotSpots];\n      this.video.pnlmViewer.setYaw(this.props.yaw);\n      this.video.pnlmViewer.setPitch(this.props.pitch);\n      this.video.pnlmViewer.setHfov(this.props.hfov);\n      this.video.pnlmViewer.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n      \n      //remove all hotspots\n      cuurentHS.map( hs => this.video.pnlmViewer.removeHotSpot(hs.id));\n      // Adding new hotspots\n      hotspotArray.map( hs => this.video.pnlmViewer.addHotSpot(hs));\n      // setting new video\n      this.video.src({ \n        type: 'video/mp4', \n        src: this.props.video \n      });\n      return this.video.play();\n    } else {\n      this.video = videojs(this.videoNode, {\n        loop:this.props.loop,\n        autoplay:this.props.autoplay,\n        controls:this.props.controls,\n        muted: this.props.muted,\n        plugins: {\n          pannellum: {\n            yaw : this.props.yaw,\n            pitch: this.props.pitch,\n            hfov: this.props.hfov,\n            minHfov: this.props.minHfov,\n            maxHfov: this.props.maxHfov,\n            minPitch: this.props.minPitch,\n            maxPitch: this.props.maxPitch,\n            minYaw: this.props.minYaw,\n            maxYaw: this.props.maxYaw,\n            hotSpotDebug: this.props.hotspotDebug,\n            autoRotate:this.props.autoRotate,\n            mouseZoom:this.props.mouseZoom,\n            hotSpots: hotspotArray\n          }\n        } \n      });\n      this.video.src({ type: 'video/mp4', src: this.props.video });\n      this.video.play();\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderVideo(\"mount\");    \n  }\n\n  componentDidUpdate (prevProps){\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n\n\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  }\n  \n  getViewer = () => {\n    return this.video.pnlmViewer;\n  }\n\n  render() {\n    let { width, height, video } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n\n      <div data-vjs-player>\n        <video\n          id={this.props.id ? this.props.id : this.state.id}\n          className=\"video-js vjs-default-skin vjs-big-play-centered\" \n          ref={node => this.videoNode = node}\n          preload=\"none\" \n          crossOrigin=\"anonymous\"\n          style={divStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PannellumVideo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/PannellumVideo.js","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/implementation.js\n// module id = eXcd\n// module chunks = 0","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/implementation.js\n// module id = fRHV\n// module chunks = 0","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/helpers/isPrimitive.js\n// module id = fXO7\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = fYOu\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = gt/O\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/es5.js\n// module id = i7Em\n// module chunks = 0","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/shim.js\n// module id = ilki\n// module chunks = 0","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n        \n        if (config.onRender) {\n          config.onRender();\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/pannellum.js","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport {\n  Pannellum,\n  PannellumVideo\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = ljAp\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/node_modules/global/document.js\n// module id = mig3\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = nAZl\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/libpannellum.js","module.exports = __webpack_public_path__ + \"alma.ce3e3084.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/alma.jpg\n// module id = rH3c\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = rplX\n// module chunks = 0","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = se3Y\n// module chunks = 0","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = sg9Q\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/isArguments.js\n// module id = t+1C\n// module chunks = 0","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/GetIntrinsic.js\n// module id = teQR\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = vttU\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/es5.js\n// module id = wSG+\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scheduler/index.js\n// module id = xW1K\n// module chunks = 0","module.exports = __webpack_public_path__ + \"jfk.b1884d3a.mp4\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/jfk.mp4\n// module id = xbFh\n// module chunks = 0","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/sign.js\n// module id = xeqp\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/node_modules/global/window.js\n// module id = yDY8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/node_modules/global/window.js\n// module id = yhRM\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = zGuD\n// module chunks = 0"],"sourceRoot":""}