{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ad33a65bd377df7606dd","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/pannellum/js/libpannellum.js","webpack:///./src/pannellum/js/pannellum.js","webpack:///./src/pannellum/js/RequestAnimationFrame.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./src/index.js","webpack:///./src/elements/Pannellum.js","webpack:///./src/elements/PannellumVideo.js","webpack:///./node_modules/video.js/node_modules/global/window.js","webpack:///./node_modules/video.js/node_modules/global/document.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/xhr/node_modules/global/window.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./src/pannellum/js/videojs-pannellum-plugin.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_8__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Stream","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","length","args","arguments","push","apply","dispose","pipe","destination","data","flushSource","flush","g","Function","eval","e","window","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","size","end","subresults","results","byteLength","subarray","buffer","result","String","fromCharCode","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","implementation","bind","fnToStr","toString","constructorRegex","isES6ClassFn","value","fnStr","test","toStr","hasToStringTag","Symbol","toStringTag","tryFunctionObject","strClass","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","a","b","generateVideoSegmentTimingInfo","baseMediaDecodeTime","startDts","startPts","endDts","endPts","prependedContentDuration","start","dts","pts","track","options","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence","samples","generateSampleTable","concatenateFrameData","Uint8Array","set","clearDtsInfo","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","firstGop","lastGop","shift","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","duration","unshift","nalCount","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","concatenateNalData","undefined","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","initSegment","offset","event","captions","captionStreams","info","timelineStartPts","endTime","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","reset","isAac","resetCaptions","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","charCodeAt","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","middle","parseSampleRate","packet","parseAacTimestamp","frameStart","frameSize","unescape","bytes","percentEncode","libpannellum","document","Renderer","container","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","image","imageType","dynamic","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","canvas","createElement","multiresNodeSort","level","multiresNodeRenderSort","diff","MultiresNode","vertices","side","x","y","replace","testMultiresNode","rotPersp","node","pitch","yaw","hfov","v","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","z","r","sqrt","theta","asin","ydiff","atan2","PI","abs","acos","sin","cos","inCurrent","k","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","cubeResolution","maxLevel","numTiles","ceil","invTileResolution","doubleTileSize","tileResolution","lastTileSize","f","ntmp","children","f1","f2","f3","i1","i2","i3","fullpath","j","rotateMatrix","angle","axis","transposeMatrix4","style","width","height","appendChild","_image","_imageType","_dynamic","haov","vaov","voffset","callback","params","console","log","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundColor","backgroundSquare","ImageData","navigator","userAgent","toLowerCase","match","getContext","alpha","depth","getError","handleWebGLError1286","documentElement","appVersion","removeChild","className","basePath","fallbackPath","sides","loaded","onLoad","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","Image","crossOrigin","onload","onerror","src","encodeURI","extension","maxWidth","max","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","horizonPitch","horizonRoll","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","color","clearColor","clear","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","aspectRatio","getUniformLocation","uniform1f","psi","h","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","Uint16Array","perspUniform","cubeUniform","err","destroy","contains","getExtension","loseContext","resize","pixelRatio","devicePixelRatio","clientWidth","clientHeight","setPose","render","focal","roll","orig_pitch","orig_yaw","w","roll_adj","vfov","atan","tan","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","matrix","uniformMatrix4fv","sort","removed","pendingTextureRequests","textureLoad","setTimeout","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","returnImage","toDataURL","transforms","u","zoom","transform","faces","keys","face","querySelector","webkitTransform","isLoading","getCanvas","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","img","tex","til","req","releaseTextureImageLoader","addEventListener","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","ret","round","join","fragEquiCubeBase","renderer","imagetype","pannellum","Viewer","initialConfig","preview","panoImage","prevTime","autoRotateStart","origHfov","origPitch","_this","isUserInteracting","latestInteraction","Date","now","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","Array","fullscreenActive","error","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","update","hotspotsCreated","defaultConfig","minHfov","maxHfov","minPitch","maxPitch","minYaw","maxYaw","vOffset","autoRotate","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","showFullscreenCtrl","doubleClickZoom","keyboardZoom","mouseZoom","showZoomCtrl","autoLoad","showControls","orientationOnByDefault","hotSpotDebug","avoidShowingBackground","animationTimingFunction","t","draggable","disableKeyboardCtrl","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","classList","add","tabIndex","uiContainer","renderContainer","dragFix","aboutMsg","innerHTML","aboutMessage","pos","mousePosition","left","top","clearTimeout","t1","t2","display","opacity","preventDefault","infoDisplay","hotSpotDebugIndicator","title","author","load","box","boxp","lbox","lbar","lbarFill","msg","errorMsg","controls","processOptions","zoomIn","setHfov","animateInit","zoomOut","fullscreen","toggleFullscreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","stopPropagation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","removeEventListener","beta","gamma","compass","div","getElementsByTagName","JSON","parse","stringify","multiRes","panorama","anError","strings","itemsToLoad","onImageLoad","onError","href","target","textContent","outerHTML","cubeMap","absoluteURL","sanitizeURL","URL","revokeObjectURL","xhr","XMLHttpRequest","onloadend","status","reader","response","FileReader","flagIndex","ignoreGPanoXMP","xmpData","substring","getTag","tag","Number","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","createObjectURL","readAsBinaryString","readAsText","onprogress","lengthComputable","unit","numerator","denominator","percent","toFixed","open","responseType","setRequestHeader","withCredentials","send","remove","url","RegExp","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","renderInitCallback","renderInit","fireEvent","bounds","getBoundingClientRect","clientX","clientY","focus","coords","mouseEventToCoords","stopAnimation","lookAt","canvasWidth","canvasHeight","pos0","targetTouches","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","default","pointerIDs","pointerCoordinates","pointerType","pointerId","defined","wheelDeltaY","wheelDelta","detail","keynumber","which","keycode","changeKey","keyChanged","performance","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","isNaN","renderHotSpots","onRender","requestAnimationFrame","newTime","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","orientationListener","q","toEulerAngles","sceneFadeDuration","fadeImg","hotSpots","createHotSpot","createHotSpots","hs","cssClass","escapeHTML","span","video","paddingTop","sceneId","onclick","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","createTooltipFunc","createTooltipArgs","scrollWidth","marginLeft","offsetWidth","marginTop","scrollHeight","clickHandlerFunc","clickHandlerArgs","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","visibility","yawSin","hfovTan","coord","rollSin","rollCos","offsetHeight","MozTransform","photoSphereExcludes","scenes","scene","isPreview","backgroundImage","key","previewTitle","previewAuthor","link","message","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","msFullscreenElement","constrainHfov","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","transition","current","parentNode","destroyHotSpots","split","trim","isLoaded","Boolean","getPitch","setPitch","animated","getPitchBounds","setPitchBounds","getYaw","setYaw","getYawBounds","setYawBounds","getHfov","getHfovBounds","setHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","setUpdate","bool","getScene","addScene","removeScene","getConfig","getContainer","addHotSpot","removeHotSpot","hotSpotId","isOrientationSupported","isOrientationActive","viewer","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_tsml__","__WEBPACK_IMPORTED_MODULE_2_tsml___default","__WEBPACK_IMPORTED_MODULE_3_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_3_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_4_keycode__","__WEBPACK_IMPORTED_MODULE_4_keycode___default","__WEBPACK_IMPORTED_MODULE_5_xhr__","__WEBPACK_IMPORTED_MODULE_5_xhr___default","__WEBPACK_IMPORTED_MODULE_6_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_6_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_7_url_toolkit__","__WEBPACK_IMPORTED_MODULE_7_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_8_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_9_mpd_parser__","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_tools_mp4_inspector__","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_tools_mp4_inspector___default","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_12_mux_js_lib_mp4__","__WEBPACK_IMPORTED_MODULE_13_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_13_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_14_aes_decrypter__","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_setPrototypeOf","setPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","instance","_assertThisInitialized","ReferenceError","_taggedTemplateLiteralLoose","raw","history","LogByTypeFactory","lvl","levels","lvlRegExp","toUpperCase","fn","isArray","createLogger","logByType","_len","_key","subname","all","debug","warn","DEFAULT","Error","filter","fname","historyItem","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","isObject","each","assign","sources","source","isPlain","computedStyle","el","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","isEl","nodeType","isInFrame","parent","createQuerier","method","selector","context","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","setAttribute","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","hasClass","classToCheck","addClass","classToAdd","removeClass","classToRemove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","onselectstart","unblockTextSelection","rect","parseFloat","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","position","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","floor","getData","hasData","removeData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","doc","charCode","keyCode","_supportsPassive","opts","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","any","videojs","Events","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","EVENT_MAP","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","debounce","immediate","timeout","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","mergeOptions","Component","ready","play","player_","parentComponent_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","_proto","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","acc","cues","cue","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","isEventKey","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","props","addToBody","host","protocol","details","location","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","loadTrack","uri","cors","responseBody","loaded_","tech_","loadHandler","errorHandler","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","volume","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","m4a","mp3","aac","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","poster","setSrc","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","formatTime","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","calculateDistance","stepBack","stepForward","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","isFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","matches","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this8","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","writable","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","responseURL","classCallCheck","Constructor","createClass","protoProps","staticProps","inherits","possibleConstructorReturn","slicedToArray","arr","iterator","_arr","_n","_d","_e","_s","done","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","playlist","playlists","segments","endList","mediaSequence","mergedPlaylist","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","responseText","customParser","addParser","mapper","addTagMapper","manifest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","onreadystatechange","abort","isFinalRendition","delay","mediaChange","started","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","segmentXhrHeaders","byterange","byterangeEnd","Range","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Blob","blob","getBlob","TransmuxWorker","document$$1","dinf","esds","ftyp","mfhd","minf","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","trackFragments","flags","dependsOn","isDependedOn","hasRedundancy","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","_findBox","mp4Generator","fileType","movie","toUnsigned$1","probe","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","sampleForFrame","dataOffset","currentNal","currentFrame","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","count","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","sampleRate","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","maxSegmentDts","maxSegmentPts","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","streamTypes","handleRollover","reference","direction","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","parseUtf8","decodeURIComponent","tagParsers","TXXX","WXXX","PRIV","owner","tagSize","bufferSize","chunk","dataAlignmentIndicator","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","PAT_PID","MP2T_PACKET_LENGTH","_AdtsStream","m2ts_1","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","NalByteStream","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","inspectMp4","_textifyMp","transmuxer","parseType$2","parseMp4Date","parseSampleFlags","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nals","avcStream","avcView","nalParse","modificationTime","streamDescriptor","Uint32Array","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","mp4Inspector$$1","inspect","ab","textify","inspectedMp4","indent","prefix","_byte","line","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","parsed","codecCount","makeMimeTypeString","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","sidxMapping","sidxKey","sidxRequestFinished_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","filterChangedSidxMappings","updatedMaster","mediaUri","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decrypted","keyBytes","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","segmentInfo","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","timeline","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","RESOLUTION","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","get$1","HlsSourceHandler","supportedType","__webpack_exports__","hasSymbols","origDefineProperty","supportsDescriptors","_","arePropertyDescriptorsSupported","predicates","getOwnPropertySymbols","isArgs","callee","ES","leftWhitespace","rightWhitespace","S","ToString","CheckObjectCoercible","ThrowTypeError","getProto","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","$ %ErrorPrototype%","$ %eval%","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","$ %Promise_resolve%","$ %Proxy%","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","global","textifyMp4","byte","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","char","__WEBPACK_IMPORTED_MODULE_0__elements_Pannellum__","__WEBPACK_IMPORTED_MODULE_1__elements_PannellumVideo__","Pannellum","_classCallCheck","_possibleConstructorReturn","_PureComponent","renderImage","hotspots","hotspotArray","hotspot","substr","tooltip","hotspotTooltip","tooltipArg","handleClickHotspot","handleClickArg","jsonConfig","hotspotDebug","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","componentDidMount","hotSpotDiv","hDiv","outDiv","inDiv","getViewer","forceRender","componentDidUpdate","prevProps","prevState","snapshot","_props","divStyle","__WEBPACK_IMPORTED_MODULE_0_react___default","ref","imageNode","PureComponent","defaultProps","Hotspot","PannellumVideo","renderVideo","videoNode","cuurentHS","pnlmViewer","componentWillUnmount","data-vjs-player","doccy","topLevel","minDoc","clean","sa","reviver","searchInput","hasKeyCode","foundNamedKey","search","aliases","nameOrCode","backspace","tab","enter","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","up","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","break","caps","return","spc","spacebar","pgup","pgdn","ins","del","cmd","alias","isFunction","parseHeaders","xtend","initParams","createXHR","_createXHR","called","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","useXDR","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","XDomainRequest","onabort","ontimeout","username","password","isEmpty","beforeSend","forEachArray","alert","confirm","prompt","getPolyfill","shim","boundTrim","that","boundLength","boundArgs","Empty","origKeys","keysShim","originalKeys","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","number","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","Type","IsPropertyDescriptor","Desc","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","setter","$SyntaxError","Property Descriptor","recordType","argumentName","modulo","remain","isPrimitive","isCallable","ES5internalSlots","O","actualHint","input","polyfill","thisArg","len","forEachString","forEachObject","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","toMove","overlaps","getSimpleBoxPosition","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","getCueAsHTML","scrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","_extends","LineStream","nextNewline","parseAttributes","ParseStream","customParsers","tagMappers","mappedLine","newLine","tagType","playlistType","URI","BYTERANGE","_attributes$BYTERANGE","IV","PRECISE","expression","customType","dataParser","lineStream","currentMap","uris","currentUri","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","timeOffset","cue-out","cue-out-cont","cue-in","cueIn","comment","parseUTCTiming","merge","objects","flatten","lists","urlToolkit","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","startRange","endRange","segmentRange","static","_attributes$timescale","sourceDuration","NOW","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","periodDuration","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","sidxByteRange","sidxEnd","mediaReferences","mergeDiscontiguousPlaylists","_acc$name$segments","addSegmentInfoFromSidx","sidxMatch","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","mainPlaylist","formattedPlaylists","roleLabel","_attributes","formatAudioPlaylist","organizeAudioPlaylists","subs","_attributes2","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","template","base","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","audioTsToVideoTs","ONE_SECOND_IN_TS","videoTsToAudioTs","StreamTypes","m2tsStreamTypes","ExpGolomb","aacUtils","parseAudioPes_","pesType","pusi","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePsi_","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","ptsTime","videoBaseTimestamp","adjustTimestamp_","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","__WEBPACK_IMPORTED_MODULE_0_pkcs7__","unpad","__WEBPACK_IMPORTED_MODULE_0_video_js__","vid","pnlmContainer"],"mappings":"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,EAAAC,EAiQAC,EAAAC,EAAAC,EAxnBAC,EAAAx0F,KAAAC,IAAA,SAQA,WACA,IAAAxF,EAyCA,GAxCA6qC,GACAmvD,QACAC,QACAC,QACAnC,QACAoC,QACAnC,QACAC,QACAjyF,QACAoE,QACAtF,QACAyzF,QACAL,QACAC,QACAhuF,QACAiuF,QACAgC,QACA/B,QACAC,QACAE,QACA6B,QACA5B,QACA6B,QACAC,QACA7B,QACA8B,QACAC,QACAC,QACAp1F,QACAF,QACAD,QACAT,QACAk0F,QACAD,QACAh0F,QACAg2F,SAKA,oBAAA9vF,WAAA,CAIA,IAAA7K,KAAA6qC,EACAA,EAAAzpC,eAAApB,KACA6qC,EAAA7qC,IACAA,EAAA8R,WAAA,GACA9R,EAAA8R,WAAA,GACA9R,EAAA8R,WAAA,GACA9R,EAAA8R,WAAA,KAKA+mF,EAAA,IAAAhuF,YACA,IAAAiH,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAinF,EAAA,IAAAluF,YACA,IAAAiH,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAgnF,EAAA,IAAAjuF,YAAA,UACAmuF,EAAA,IAAAnuF,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAouF,EAAA,IAAApuF,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAquF,GACA/gE,MAAA6gE,EACA5wC,MAAA6wC,GAEAI,EAAA,IAAAxuF,YACA,EACA,MACA,QACA,SACA,eACA,EACA,QAEAuuF,EAAA,IAAAvuF,YACA,EACA,MACA,IACA,MAEAyuF,EAAA,IAAAzuF,YACA,EACA,MACA,UAEA0uF,EAAAD,EACAE,EAAA,IAAA3uF,YACA,EACA,MACA,QACA,UAEA4uF,EAAAH,EACAH,EAAA,IAAAtuF,YACA,EACA,MACA,IACA,IACA,IACA,OApIA,GAwIAyhB,EAAA,SAAA3qB,GACA,IAGA3B,EACAsE,EAHAs2F,KACA72F,EAAA,EAKA,IAAA/D,EAAA,EAAaA,EA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","file":"pannellum-react.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PannellumReact\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"PannellumReact\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ad33a65bd377df7606dd","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = 0\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 1\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = 2\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/index.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = 5\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = 6\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/utils.js\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 8\n// module chunks = 0","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/libpannellum.js","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n        \n        if (config.onRender) {\n          config.onRender();\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/pannellum.js","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/RequestAnimationFrame.js","/**\n * @license\n * Video.js 7.6.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.0\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n\n    event.stopPropagation();\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {String} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector$$1 = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector$$1.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector$$1.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector$$1.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        if (updatedMaster) {\n          var sidxKey = generateSidxKey(_this8.media().sidx); // the sidx was updated, so the previous mapping was removed\n\n          if (!_this8.sidxMapping_[sidxKey]) {\n            var playlist = _this8.media();\n\n            _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n              handleManifestRedirects: _this8.handleManifestRedirects\n            }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n              if (!newMaster || !sidx) {\n                throw new Error('failed to request sidx on minimumUpdatePeriod');\n              } // update loader's sidxMapping with parsed sidx box\n\n\n              _this8.sidxMapping_[sidxKey].sidx = sidx;\n              _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                _this8.trigger('minimumUpdatePeriod');\n              }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n              _this8.refreshMedia_(_this8.media().uri);\n\n              return;\n            }));\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/define-properties/index.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/isArguments.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/implementation.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/GetIntrinsic.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has/src/index.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/polyfill.js\n// module id = 20\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = 21\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = 22\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 23\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 24\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 25\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = 26\n// module chunks = 0","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport {\n  Pannellum,\n  PannellumVideo\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import propTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\n\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\n\nclass Pannellum extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Math.random()\n        .toString(36)\n        .substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    image: propTypes.string,\n    haov: propTypes.number,\n    vaov: propTypes.number,\n    vOffset: propTypes.number,\n    yaw: propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    autoRotate: propTypes.number,\n    compass: propTypes.bool,\n    preview: propTypes.string,\n    previewTitle: propTypes.string,\n    previewAuthor: propTypes.string,\n    title: propTypes.string,\n    author: propTypes.string,\n    autoLoad: propTypes.bool,\n    orientationOnByDefault: propTypes.bool,\n    showZoomCtrl: propTypes.bool,\n    keyboardZoom: propTypes.bool,\n    mouseZoom: propTypes.bool,\n    draggable: propTypes.bool,\n    disableKeyboardCtrl: propTypes.bool,\n    showFullscreenCtrl: propTypes.bool,\n    showControls: propTypes.bool,\n    onLoad: propTypes.func,\n    onScenechange: propTypes.func,\n    onScenechangefadedone: propTypes.func,\n    onError: propTypes.func,\n    onErrorcleared: propTypes.func,\n    onMousedown: propTypes.func,\n    onMouseup: propTypes.func,\n    onTouchstart: propTypes.func,\n    onTouchend: propTypes.func,\n    hotspotDebug: propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick: propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n    onRender: propTypes.func,\n    cubeMap: propTypes.arrayOf(propTypes.string)\n  }\n\n  static defaultProps = {\n    children: [],\n    width: '100%',\n    height: '400px',\n    image: '',\n    haov: 360,\n    vaov: 180,\n    vOffset: 0,\n    yaw: 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    autoRotate: 0,\n    compass: false,\n    preview: '',\n    previewTitle: '',\n    previewAuthor: '',\n    title: '',\n    author: '',\n    autoLoad: false,\n    orientationOnByDefault: false,\n    showZoomCtrl: true,\n    keyboardZoom: true,\n    mouseZoom: true,\n    draggable: true,\n    disableKeyboardCtrl: false,\n    showFullscreenCtrl: true,\n    showControls: true,\n    onLoad: () => {},\n    onScenechange: () => {},\n    onScenechangefadedone: () => {},\n    onError: () => {},\n    onErrorcleared: () => {},\n    onMousedown: () => {},\n    onMouseup: () => {},\n    onTouchstart: () => {},\n    onTouchend: () => {},\n    hotspotDebug: false,\n    onRender: null,\n    cubeMap: []\n  }\n\n  renderImage = state => {\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one\n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)) {\n      hotspots.map(hotspot => {\n        switch (hotspot.props.type) {\n          case 'info':\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              type: hotspot.props.type,\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              text: hotspot.props.text ? hotspot.props.text : '',\n              URL: hotspot.props.URL ? hotspot.props.URL : ''\n            });\n          case 'custom':\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              cssClass: hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              createTooltipFunc: hotspot.props.tooltip\n                ? hotspot.props.tooltip\n                : this.hotspotTooltip,\n              createTooltipArgs: hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              clickHandlerFunc: hotspot.props.handleClick\n                ? hotspot.props.handleClick\n                : this.handleClickHotspot,\n              clickHandlerArgs: hotspot.props.handleClickArg\n                ? hotspot.props.handleClickArg\n                : { name: 'test' }\n            });\n          default:\n            return [];\n        }\n      });\n    }\n\n    let jsonConfig = {\n      type: 'equirectangular',\n      panorama: this.props.image,\n      haov: this.props.haov,\n      vaov: this.props.vaov,\n      vOffset: this.props.vOffset,\n      yaw: this.props.yaw,\n      pitch: this.props.pitch,\n      hfov: this.props.hfov,\n      minHfov: this.props.minHfov,\n      maxHfov: this.props.maxHfov,\n      minPitch: this.props.minPitch,\n      maxPitch: this.props.maxPitch,\n      minYaw: this.props.minYaw,\n      maxYaw: this.props.maxYaw,\n      autoRotate: this.props.autoRotate,\n      compass: this.props.compass,\n      preview: this.props.preview,\n      previewTitle: this.props.previewTitle,\n      previewAuthor: this.props.previewAuthor,\n      author: this.props.author,\n      title: this.props.title,\n      autoLoad: this.props.autoLoad,\n      orientationOnByDefault: this.props.orientationOnByDefault,\n      showZoomCtrl: this.props.showZoomCtrl,\n      keyboardZoom: this.props.keyboardZoom,\n      mouseZoom: this.props.mouseZoom,\n      draggable: this.props.draggable,\n      disableKeyboardCtrl: this.props.disableKeyboardCtrl,\n      showFullscreenCtrl: this.props.showFullscreenCtrl,\n      showControls: this.props.showControls,\n      hotSpotDebug: this.props.hotspotDebug,\n      hotSpots: hotspotArray,\n      onRender: this.props.onRender,\n      cubeMap: this.props.cubeMap\n    };\n\n    Object.keys(jsonConfig).forEach(\n      key => jsonConfig[key] === '' && delete jsonConfig[key]\n    );\n    // this.setState({ jsonConfig });\n\n    if (state === 'update') {\n      this.panorama.destroy();\n    }\n    this.panorama = pannellum.viewer(\n      this.props.id ? this.props.id : this.state.id,\n      jsonConfig\n    );\n\n    this.panorama.on('load', this.props.onLoad);\n    this.panorama.on('scenechange', this.props.onScenechange);\n    this.panorama.on('scenechangefadedone', this.props.onScenechangefadedone);\n    this.panorama.on('error', this.props.onError);\n    this.panorama.on('errorcleared', this.props.onErrorcleared);\n    this.panorama.on('mousedown', this.props.onMousedown);\n    this.panorama.on('mouseup', this.props.onMouseup);\n    this.panorama.on('touchstart', this.props.onTouchstart);\n    this.panorama.on('touchend', this.props.onTouchend);\n  }\n\n  componentDidMount = () => {\n    this.renderImage('mount');\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.image !== this.props.image ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.compass !== this.props.compass ||\n      prevProps.title !== this.props.title ||\n      prevProps.author !== this.props.author ||\n      prevProps.preview !== this.props.preview ||\n      prevProps.previewTitle !== this.props.previewTitle ||\n      prevProps.previewAuthor !== this.props.previewAuthor ||\n      prevProps.showZoomCtrl !== this.props.showZoomCtrl ||\n      prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl ||\n      prevProps.showControls !== this.props.showControls ||\n      prevProps.children.length !== this.props.children.length\n    ) {\n      this.renderImage('update');\n    }\n    if (\n      prevProps.maxYaw !== this.props.maxYaw ||\n      prevProps.minYaw !== this.props.minYaw ||\n      prevProps.maxPitch !== this.props.maxPitch ||\n      prevProps.minPitch !== this.props.minPitch ||\n      prevProps.maxHfov !== this.props.maxHfov ||\n      prevProps.minHfov !== this.props.minHfov\n    ) {\n      this.panorama.setYawBounds([this.props.minYaw, this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch, this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov, this.props.maxHfov]);\n    }\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  }\n\n  handleClickHotspot = (e, args) => {\n    console.log('hotspot clicked', args.name);\n  }\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute('id', 'textInfo');\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  getViewer = () => {\n    return this.panorama;\n  }\n\n  forceRender = () => {\n    this.renderImage('update');\n  }\n\n  render() {\n    let { width, height } = this.props;\n    let divStyle = {\n      width: width,\n      height: height\n    };\n    return (\n      <div\n        id={this.props.id ? this.props.id : this.state.id}\n        style={divStyle}\n        ref={node => (this.imageNode = node)}\n      />\n    );\n  }\n}\nPannellum.Hotspot = () => {};\nPannellum.Hotspot = () => {};\nexport default Pannellum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/Pannellum.js","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\n\nclass PannellumVideo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    video: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    hotspotDebug: propTypes.bool,\n    autoRotate: propTypes.number,\n    mouseZoom: propTypes.bool,\n    loop:propTypes.bool,\n    autoplay:propTypes.bool,\n    controls:propTypes.bool,\n    muted:propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    video:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    hotspotDebug: false,\n    autoRotate: 0,\n    mouseZoom: true,\n    loop:false,\n    autoplay:true,\n    controls:false,\n    muted: true\n  }\n\n  renderVideo = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    if (state === \"update\"){\n      \n      this.video = videojs(this.videoNode);\n      let cuurentHS = [...this.video.pnlmViewer.getConfig().hotSpots];\n      this.video.pnlmViewer.setYaw(this.props.yaw);\n      this.video.pnlmViewer.setPitch(this.props.pitch);\n      this.video.pnlmViewer.setHfov(this.props.hfov);\n      this.video.pnlmViewer.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n      \n      //remove all hotspots\n      cuurentHS.map( hs => this.video.pnlmViewer.removeHotSpot(hs.id));\n      // Adding new hotspots\n      hotspotArray.map( hs => this.video.pnlmViewer.addHotSpot(hs));\n      // setting new video\n      this.video.src({ \n        type: 'video/mp4', \n        src: this.props.video \n      });\n      return this.video.play();\n    } else {\n      this.video = videojs(this.videoNode, {\n        loop:this.props.loop,\n        autoplay:this.props.autoplay,\n        controls:this.props.controls,\n        muted: this.props.muted,\n        plugins: {\n          pannellum: {\n            yaw : this.props.yaw,\n            pitch: this.props.pitch,\n            hfov: this.props.hfov,\n            minHfov: this.props.minHfov,\n            maxHfov: this.props.maxHfov,\n            minPitch: this.props.minPitch,\n            maxPitch: this.props.maxPitch,\n            minYaw: this.props.minYaw,\n            maxYaw: this.props.maxYaw,\n            hotSpotDebug: this.props.hotspotDebug,\n            autoRotate:this.props.autoRotate,\n            mouseZoom:this.props.mouseZoom,\n            hotSpots: hotspotArray\n          }\n        } \n      });\n      this.video.src({ type: 'video/mp4', src: this.props.video });\n      this.video.play();\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderVideo(\"mount\");    \n  }\n\n  componentDidUpdate (prevProps){\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n\n\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  }\n  \n  getViewer = () => {\n    return this.video.pnlmViewer;\n  }\n\n  render() {\n    let { width, height, video } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n\n      <div data-vjs-player>\n        <video\n          id={this.props.id ? this.props.id : this.state.id}\n          className=\"video-js vjs-default-skin vjs-big-play-centered\" \n          ref={node => this.videoNode = node}\n          preload=\"none\" \n          crossOrigin=\"anonymous\"\n          style={divStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PannellumVideo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/PannellumVideo.js","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/node_modules/global/window.js\n// module id = 31\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/node_modules/global/document.js\n// module id = 32\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = 34\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = 35\n// module chunks = 0","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 37\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/node_modules/global/window.js\n// module id = 38\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = 39\n// module chunks = 0","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/index.js\n// module id = 41\n// module chunks = 0","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/implementation.js\n// module id = 42\n// module chunks = 0","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/index.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/implementation.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/es5.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/assertRecord.js\n// module id = 46\n// module chunks = 0","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isNaN.js\n// module id = 47\n// module chunks = 0","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isFinite.js\n// module id = 48\n// module chunks = 0","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/sign.js\n// module id = 49\n// module chunks = 0","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/mod.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/es5.js\n// module id = 51\n// module chunks = 0","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/helpers/isPrimitive.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/shim.js\n// module id = 53\n// module chunks = 0","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = 54\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = 55\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = 56\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = 57\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = 58\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = 59\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = 60\n// module chunks = 0","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = 61\n// module chunks = 0","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = 62\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = 63\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = 64\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = 65\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/audio-frame-utils.js\n// module id = 66\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 67\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = 68\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = 69\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 70\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = 71\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = 72\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 73\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 74\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = 75\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = 76\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 77\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = 78\n// module chunks = 0","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = 79\n// module chunks = 0","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = 80\n// module chunks = 0","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.registerPlugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    \n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/videojs-pannellum-plugin.js"],"sourceRoot":""}